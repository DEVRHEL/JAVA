/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package steg;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static steg.Steg.decodetoASCII;
import static steg.Steg.laythuoctinhtrongthe;
import static steg.Steg.loccacthekhongcothuoctinh;
import static steg.Steg.tachcacthe;
import static steg.Steg.tagHTML;

/**
 *
 * @author ThanhTien
 */
public class PhatHienVaGiaiMa extends javax.swing.JFrame {

    /**
     * Creates new form FileChoose
     */
    private static final int FILE_OPEN = 1;

    private static final int FILE_SAVE = 2;

    private boolean changed = false;

    public PhatHienVaGiaiMa() {
        initComponents();
        setLocation(200, 150);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        miNew = new javax.swing.JMenuItem();
        miOpen = new javax.swing.JMenuItem();
        miSave = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        jLabel1.setText("Giai Ma Giau Tin Trong File HTML");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Reconstruct the Message HTML Steganography ");

        jLabel3.setText("D16CQAT01-N");

        jLabel7.setText("Group 3");

        jMenu3.setText("File");

        miNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNewActionPerformed(evt);
            }
        });
        jMenu3.add(miNew);

        miOpen.setText("Open");
        miOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenActionPerformed(evt);
            }
        });
        jMenu3.add(miOpen);

        miSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveActionPerformed(evt);
            }
        });
        jMenu3.add(miSave);

        jMenuBar2.add(jMenu3);
        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(0, 98, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNewActionPerformed
        JOptionPane.showMessageDialog(null, "New is updateing");
        //taFile.setText("");
        //taFile.requestFocus();


    }//GEN-LAST:event_miNewActionPerformed

    private void miOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenActionPerformed
        operateFile("Open a File", FILE_OPEN);
    }//GEN-LAST:event_miOpenActionPerformed

    private void miSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveActionPerformed

        operateFile("save a file", FILE_SAVE);
    }//GEN-LAST:event_miSaveActionPerformed
    private void operateFile(String title, int type) {
        JFileChooser chooser = new JFileChooser();
        int choose = -1;
        chooser.setDialogTitle(title);
        switch (type) {
            case FILE_OPEN:
                choose = chooser.showOpenDialog(null);
                break;
            /*case FILE_SAVE:
                choose = chooser.showSaveDialog(null);
                break;
             */
        }
        if (choose == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            switch (type) {
                case FILE_OPEN:
                    //choose=chooser.showOpenDialog(null);
                    // JOptionPane.showMessageDialog(null, "Read a file");
                    String s2 = readFile(file);
                    ArrayList<String> a = new ArrayList<>();
                    a = tachcacthe(s2);
                    a = loccacthekhongcothuoctinh(a);
                    //System.out.println(a);
                    a = laythuoctinhtrongthe(a);
                    Map<String, String> m = new HashMap<>();
                    m = tagHTML(m); // type value =1 width heigh =1
                    String encode = "";
                    //String notfound = "11111111";
                    for (int i = 0; i < a.size(); i++) {
                        String[] mattr = a.get(i).split(" ");
                        for (int j = 0; j < mattr.length - 1; j++) {
                            if (m.containsKey(mattr[j]) && (m.containsValue(mattr[j + 1]))) {
                                encode += "1";
                                j++;
                            } else if (m.containsKey(mattr[j + 1]) && (m.containsValue(mattr[j]))) {
                                encode += "0";
                                j++;
                            }

                        }
                    }
                    if (decodetoASCII(encode).equals("")) {
                        JOptionPane.showMessageDialog(null, "File html not have hidden message! ");
                    } else {
                        JOptionPane.showMessageDialog(null, "File html have hidden message \nHidden message: " + decodetoASCII(encode));
                    }
                   
                    
                    break;
                /*case FILE_SAVE:
                    int result = JOptionPane.showConfirmDialog(null, "Do you want to save this file");
                    if (result == JOptionPane.YES_OPTION) {
                        writeFile(file);
                        this.setTitle(file.getName());
                    }
                    //choose=chooser.showSaveDialog(null);
                    JOptionPane.showMessageDialog(null, "Read a file");
                    writeFile(file);
                    break;
                 */
            }

        }
    }

    private static String readFile(File file) {
        String s1 = "";
        try {
            //taFile.setText("");
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            //String line ;
            String line = "";
            String s = "";
            while ((line = br.readLine()) != null) {
                //taFile.append(line +"\n");
                s += line;

            }
            s1 = s1 + s;
            br.close();
            fr.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error");
        }
        return s1;
    }

    /*private void writeFile(File file) {
        try {
            file.createNewFile();
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            String data = taFile.getText();
            bw.write(data);
            bw.close();
            fw.close();
            //changed=false;
            readFile(file);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error");
        }
    }
     */
    public static ArrayList<String> tachcacthe(String s) {
        int start = 0;
        int end = 0;
        ArrayList<String> a = new ArrayList<>();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '<') {
                start = i;
                for (int j = i + 1; j < s.length(); j++) {
                    if (s.charAt(j) == '>') {
                        end = j;
                        a.add(s.substring(start, end + 1));
                        i = j;
                        break;
                    }
                    i = j;
                }
            }
        }
        return a;
    }

    public static ArrayList<String> loccacthekhongcothuoctinh(ArrayList<String> a) {
        for (int i = 0; i < a.size(); i++) {
            if (a.get(i).contains("'") || a.get(i).contains("\"") || a.get(i).contains("=")) {
            } else {
                a.remove(i);
                i--;
            }
        }
        return a;
    }

    public static ArrayList<String> laythuoctinhtrongthe(ArrayList<String> a) {
        for (int i = 0; i < a.size(); i++) {
            Pattern tagPattern = Pattern.compile("[a-zA-Z]+=");
            Matcher m = tagPattern.matcher(a.get(i));
            String attr = "";
            while (m.find()) {
                attr += m.group() + " ";// style= value=
            }
            a.set(i, attr.replaceAll("= ", " "));
        }
        return a;
    }

    public static String decodetoASCII(String s) {
        String s2 = "";
        char nextChar;
        for (int i = 0; i <= s.length() - 7; i += 8) {
            nextChar = (char) Integer.parseInt(s.substring(i, i + 8), 2);
            s2 += nextChar;
        }
        return s2;
    }

    public static Map tagHTML(Map<String, String> m) {
        m.put("type", "value");
        m.put("width", "height");
        m.put("name", "content");
        m.put("align", "valign");
        //m.put("text", "bgcolor");
        //m.put("class", "style");
        //m.put("alink", "vlink");

        return m;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhatHienVaGiaiMa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhatHienVaGiaiMa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhatHienVaGiaiMa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhatHienVaGiaiMa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhatHienVaGiaiMa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem miNew;
    private javax.swing.JMenuItem miOpen;
    private javax.swing.JMenuItem miSave;
    // End of variables declaration//GEN-END:variables
}
